nuget {
	nuspec {
		id: luajit;
		version: 2.0.3;
		title: LuaJIT;
		authors: {LuaJIT Developers};
		owners: {LuaJIT Developers};
		licenseUrl: "http://opensource.org/licenses/mit-license.php";
		projectUrl: "http://luajit.org/luajit.html";
		requireLicenseAcceptance: false;
		summary: "LuaJIT is a Just-In-Time Compiler (JIT) for the Lua
		programming language.";

		description: @"LuaJIT is a Just-In-Time Compiler (JIT) for the
		Lua programming language. Lua is a powerful, dynamic and 
		light-weight programming language. It may be embedded or used
		as a general-purpose, stand-alone language.

		LuaJIT is Copyright Â© 2005-2014 Mike Pall, released under the
		MIT open source license.

		LuaJIT has been successfully used as a scripting middleware in
		games, appliances, network and graphics apps, numerical
		simulations, trading platforms and many other specialty
		applications. It scales from embedded devices, smartphones,
		desktops up to server farms. It combines high flexibility with
		high performance and an unmatched low memory footprint.

		LuaJIT has been in continuous development since 2005. It's 
		widely considered to be one of the fastest dynamic language
		implementations. It has outperformed other dynamic languages
		on many cross-language benchmarks since its first release - 
		often by a substantial margin.

		For LuaJIT 2.0, the whole VM has been rewritten from the 
		ground up and relentlessly optimized for performance. It
		combines a high-speed interpreter, written in assembler,
		with a state-of-the-art JIT compiler.

		An innovative trace compiler is integrated with advanced, 
		SSA-based optimizations and highly tuned code generation
		backends. A substantial reduction of the overhead associated
		with dynamic languages allows it to break into the performance
		range traditionally reserved for offline, static language
		compilers.";

		releaseNotes: "Release of LuaJIT 2.0.3 libraries.";
		copyright: "Copyright 2014";
		tags: { Lua, LuaJIT, native };
	};

	files {
		#defines {
			SDK_LUAJIT = "luajit-src\";
		}

		include: {
			"${SDK_LUAJIT}src\lua.hpp",
			"${SDK_LUAJIT}src\lua.h",
			"${SDK_LUAJIT}src\luaconf.h",
			"${SDK_LUAJIT}src\luajit.h",
			"${SDK_LUAJIT}src\lualib.h",
			"${SDK_LUAJIT}src\lauxlib.h"
		};

		docs: {
			"${SDK_LUAJIT}COPYRIGHT",
			"${SDK_LUAJIT}doc\**\*"
		};

		lua: {
			#add-all-files: Items.LuaJITFiles;
			#destination: ${build_root}\lua;
			"${SDK_LUAJIT}src\jit\**\*"
		};

		[x64,dynamic] {
			lib: "${SDK_LUAJIT}src\lua51.lib";
			bin: {
				"${SDK_LUAJIT}bin\lua51.dll",
				"${SDK_LUAJIT}bin\luajit.exe"
			};
		}
	};

	targets {
		Defines += HAS_LuaJIT;
		AfterBuild {
			.Copy {
				SourceFiles = "@(LuaJITFiles)";
				DestinationFiles = "@(LuaJITFiles->'$(TargetDir)lua\jit\%(RecursiveDir)%(Filename)%(Extension)')";
				SkipUnchangedFiles = true;
				UseHardlinksIfPossible = true;
			};
		};
	};
}